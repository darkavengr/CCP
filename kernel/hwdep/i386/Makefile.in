ASM=nasm
CC=@arch@-elf-gcc
LD=@arch@-elf-gcc

all: ex.o partition.o port.o sched.o mutex.o interrupts.o stack.o aainit.o usermode.o cpustate.o initializepaging.o tss.o gdt.o @cc_opt_obj_files@

ex.o:
	$(CC) -c -w -I@buildroot@/header -I@buildroot@/kernel/hwdep/@arch@ ex.c -o @buildroot@/obj/@arch@/ex.o

partition.o:
	$(CC) -c -w -I@buildroot@/header -I@buildroot@/kernel/hwdep/@arch@ partition.c -o @buildroot@/obj/@arch@/partition.o

port.o:
	$(CC) -c -w -I@buildroot@/header -I@buildroot@/kernel/hwdep/@arch@ port.c -o @buildroot@/obj/@arch@/port.o

sched.o:
	$(ASM) -felf32 sched.asm -o @buildroot@/obj/@arch@/sched.o

mutex.o:
	$(CC) -c -w -I@buildroot@/header -I@buildroot@/kernel/hwdep/@arch@ mutex.c -o @buildroot@/obj/@arch@/mutex.o

aainit.o:
	$(ASM) -felf32 init.asm -o @buildroot@/obj/@arch@/aainit.o

stack.o:
	$(ASM) -felf32 stack.asm -o @buildroot@/obj/@arch@/stack.o

tss.o:
	$(ASM) -felf32 tss.asm -o @buildroot@/obj/@arch@/tss.o

cpustate.o:
	$(ASM) -felf32 cpustate.asm -o @buildroot@/obj/@arch@/cpustate.o

interrupts.o:
	$(ASM) -felf32 interrupts.asm -o @buildroot@/obj/@arch@/interrupts.o

gdt.o:
	$(ASM) -felf32 gdt.asm -o @buildroot@/obj/@arch@/gdt.o

usermode.o:
	$(ASM) -felf32 usermode.asm -o @buildroot@/obj/@arch@/usermode.o

initializepaging.o:
	$(ASM) -felf32 initializepaging.asm -o @buildroot@/obj/@arch@/initializepaging.o

page.o:
	$(CC) -c -w -I@buildroot@/header -I@buildroot@/kernel/hwdep/@arch@ page.c -o @buildroot@/obj/@arch@/page.o

paepage.o:
	$(CC) -c -w -I@buildroot@/header -I@buildroot@/kernel/hwdep/@arch@ paepage.c -o @buildroot@/obj/@arch@/paepage.o



#define PCI_CONFIG_ADDRESS 0xCF8
#define PCI_CONFIG_DATA 0xCFC

#define PCI_STANDARD_HEADER 	0
#define PCI_PCI_BRIDGE		1
#define CARDBUS_BRIDGE		2

#define GET_BIST_CAPABLE(n) n >> 7
#define GET_START_BIST(n) n >> 6
#define GET_COMPLETION_CODE(n) n & 8

#define GET_BAR(bar) bar >> 4

#define CLASS_UNCLASSIFIED 		0
 #define SUBCLASS_NONVGA_COMPATIBLE 0
 #define SUBCLASS_VGA_COMPATIBLE 1

#define CLASS_MASS_STORAGE_CONTROLLER 	1

 #define SUBCLASS_MASS_STORAGE_SCSI_BUS_CONTROLLER 0
 #define SUBCLASS_MASS_STORAGE_IDE_CONTROLLER	     1
 #define SUBCLASS_MASS_STORAGE_FLOPPYDISK_CONTROLLER	2
 #define SUBCLASS_MASS_STORAGE_IPI_BUS_CONTROLLER	3
 #define SUBCLASS_MASS_STORAGE_RAID_CONTROLLER	4
 #define SUBCLASS_MASS_STORAGE_ATA_CONTROLLER	5
 #define SUBCLASS_MASS_STORAGE_SERIALATA_CONTROLLER	6
 #define SUBCLASS_MASS_STORAGE_SERIAL_SCSI		7
 #define SUBCLASS_MASS_STORAGE_NV_MEMORY_CONTROLLER	8
 #define SUBCLASS_MASS_STORAGE_OTHER			0x80
 
  #define IF_MASS_STORAGE_ISA_COMPATIBILITY_MODE_ONLY_CONTROLLER 0
  #define IF_MASS_STORAGE_PCI_NATIVE_MODE_ONLY_CONTROLLER	    5
  #define IF_MASS_STORAGE_ISA_COMPATIBILITY_MODE_CONTROLLER 	    0xA
  #define IF_MASS_STORAGE_PCI_NATIVE_MODE_CONTROLLER	    	    0xF
  #define IF_MASS_STORAGE_ISA_COMPATIBILITY_MODE_ONLY_BM_CONTROLLER 0x80
  #define IF_MASS_STORAGE_PCI_NATIVE_MODE_ONLY_BM_CONTROLLER	    0x85
  #define IF_MASS_STORAGE_ISA_COMPATIBILITY_MODE_BM_CONTROLLER 	    0x8A
  #define IF_MASS_STORAGE_PCI_NATIVE_MODE_BM_CONTROLLER	    	    0x8F

#define CLASS_NETWORK_CONTROLLER	2
 #define SUBCLASS_NETWORK_ETHERNET_CONTROLLER	0
 #define SUBCLASS_NETWORK_TOKENRING_CONTROLLER	1
 #define SUBCLASS_NETWORK_FDDI_CONTROLLER	2
 #define SUBCLASS_NETWORK_ATM_CONTROLLER	3
 #define SUBCLASS_NETWORK_ISDN_CONTROLLER	4
 #define SUBCLASS_NETWORK_WORLDFLIP_CONTROLLER	5
 #define SUBCLASS_NETWORK_PCMIG214_CONTROLLER	6
 #define SUBCLASS_NETWORK_INFINIBAND_CONTROLLER	7
 #define SUBCLASS_NETWORK_FABRIC_CONTROLLER	8
 #define SUBCLASS_NETWORK_OTHER_CONTROLLER	0x80


#define CLASS_DISPLAY_CONTROLLER	3
 #define SUBCLASS_DISPLAY_CONTROLLER_VGA_CONTROLLER	0
 #define SUBCLASS_DISPLAY_XGA_CONTROLLER	1
 #define SUBCLASS_DISPLAY_3DCONTROLLER		2
 #define SUBCLASS_DISPLAY_OTHER			3

#define CLASS_MULTIMEDIA_CONTROLLER	4
 #define SUBCLASS_MULTIMEDIA_VIDEO_CONTROLLER	0
 #define SUBCLASS_MULTIMEDIA_AUDIO_CONTROLLER	1
 #define SUBCLASS_MULTIMEDIA_TELEPHONY_CONTROLLER	2
 #define SUBCLASS_MULTIMEDIA_AUDIO_DEVICE	3
 #define SUBCLASS_MULTIMEDIA_OTHER		0x80

#define CLASS_MEMORY_CONTROLLER		5
 #define SUBCLASS_MEMORY_RAMCONTROLLER	0
 #define SUBCLASS_MEMORY_FLASH_CONTROLLER	1
 #define SUBCLASS_MEMORY_FLASH_OTHER	0x80

#define CLASS_BRIDGE_DEVICE		6
 #define SUBCLASS_BRIDGE_HOST_BRIDGE	0
 #define SUBCLASS_BRIDGE_ISA_BRIDGE	1
 #define SUBCLASS_BRIDGE_EISA_BRIDGE	2
 #define SUBCLASS_BRIDGE_MCA_BRIDGE	3
 #define SUBCLASS_BRIDGE_PCI_PCI_BRIDGE	4

  #define IF_BRIDGE_NORMAL_DECODE	0
  #define IF_BRIDGE_SUBTRACTIVE_DECODE	1

 #define SUBCLASS_BRIDGE_PCMCIA_BRIDGE	5
 #define SUBCLASS_BRIDGE_CARDBUS_BRIDGE	7
 #define SUBCLASS_BRIDGE_RACEWAY_BRIDGE	8

  #define IF_BRIDGE_RACEWAY_TRANSPARANT	0
  #define IF_BRIDGE_RACEWAY_ENDPOINT	1

 #define SUBCLASS_BRIDGE_ISA_BRIDGE2	9
  #define IF_ISA_BRIDGE_PRIMARY_BUS	0x40
  #define IF_ISA_BRIDGE_SECONDARY_BUS	0x80

 #define SUBCLASS_BRIDGE_INFINIBAND	0xA
 #define SUBCLASS_BRIDGE_OTHER		0x80

#define CLASS_COMMUNICATION_CONTROLLER	7
 #define SUBCLASS_COMMUNICATION_GENERIC_SERIAL	0
  #define IF_COMMUNICATION_16450_SERIAL	1
  #define IF_COMMUNICATION_16550_SERIAL	2
  #define IF_COMMUNICATION_16650_SERIAL	3
  #define IF_COMMUNICATION_16750_SERIAL	4
  #define IF_COMMUNICATION_16850_SERIAL	5
  #define IF_COMMUNICATION_16950_SERIAL	6

 #define SUBCLASS_COMMUNICATION_PARALLEL 1
  #define IF_COMMUNICATION_PARALLEL	0
  #define IF_COMMUNICATION_BI_PARALLEL	1
  #define IF_COMMUNICATION_ECP_PARALLEL	2
  #define IF_COMMUNICATION_IEEE1284_PARALLEL	3
  #define IF_COMMUNICATION_IEEE1284_TARGET	4

  #define SUBCLASS_COMMUNICATION_MULTIPORT_SERIAL 2
  #define SUBCLASS_COMMUNICATION_MODEM 3
   #define IF_COMMUNICATION_MODEM 0
   #define IF_COMMUNICATION_HAYES16450 1
   #define IF_COMMUNICATION_HAYES16550 2
   #define IF_COMMUNICATION_HAYES16650 3
   #define IF_COMMUNICATION_HAYES16750 4

   #define SUBCLASS_COMMUNICATION_IEEE481 4
   #define SUBCLASS_COMMUNICATION_SMARTCARD 5
   #define SUBCLASS_COMMUNICATION_OTHER 0x80

#define CLASS_BASE_SYSTEM	8
  #define SUBCLASS_BASE_SYSTEM_PIC	0
   #define IF_BASE_SYSTEM_ISA_COMPATIBLE	1
   #define IF_BASE_SYSTEM_EISA_COMPATIBLE	2
   #define IF_BASE_SYSTEM_IOAPIC_CONTROLLER 0x10
   #define IF_BASE_SYSTEM_IOXAPIC_CONTROLLER 0x20

  #define SUBCLASS_BASE_SYSTEM_DMACONTROLLER	1
   #define IF_BASE_SYSTEM_8237_COMPATIBLE 0
   #define IF_BASE_SYSTEM_ISACOMPATIBLE 1
   #define IF_BASE_SYSTEM_EISACOMPATIBLE 2
   #define IF_BASE_SYSTEM_ISACOMPATIBLE 1

  #define SUBCLASS_BASE_SYSTEM_TIMER	2
   #define IF_BASE_SYSTEM_TIMER_8237_COMPATIBLE 0
   #define IF_BASE_SYSTEM_TIMER_ISA_COMPATIBLE 1
   #define IF_BASE_SYSTEM_TIMER_EISA_COMPATIBLE 2
   #define IF_BASE_SYSTEM_TIMER_8237_HPET 3

  #define SUBCLASS_BASE_SYSTEM_RTC	3
   #define IF_BASE_SYSTEM_GENERICRTC 	0
   #define IF_BASE_SYSTEM_ISA_COMPATIBLE 	1

  #define SUBCLASS_BASE_SYSTEM_PCI_HOTPLUG_CONTROLLER	4
  #define SUBCLASS_BASE_SYSTEM_SD_HOSTCONTROLLER	5
  #define SUBCLASS_BASE_SYSTEM_IOMMU	6
  #define SUBCLASS_BASE_SYSTEM_OTHER	0x80

#define CLASS_INPUTDEVICE_CONTROLLER	9
  #define SUBCLASS_INPUTDEVICE_KEYBOARD_CONTROLLER 0
  #define SUBCLASS_INPUTDEVICE_DIGITIALIZER 1
  #define SUBCLASS_INPUTDEVICE_MOUSE_CONTROLLER 2
  #define SUBCLASS_INPUTDEVICE_SCANNER_CONTROLLER 3
  #define SUBCLASS_INPUTDEVICE_GAMPORT_CONTROLLER 4
  #define SUBCLASS_INPUTDEVICE_OTHER 0x80

#define CLASS_DOCKING_STATION	0xA
 #define SUBCLASS_DOCKING_STATION_GENERIC	0
 #define SUBCLASS_DOCKING_STATION_OTHER	0x80

#define CLASS_CPU		0xB
 #define SUBCLASS_CPU_386	0
 #define SUBCLASS_CPU_486	1
 #define SUBCLASS_CPU_PENTIUM	2
 #define SUBCLASS_CPU_ALPHA	0x10
 #define SUBCLASS_CPU_POWERPC	0x20
 #define SUBCLASS_CPU_MIPS	0x30
 #define SUBCLASS_CPU_COPROCESSOR	0x40
	
#define CLASS_SERIALBUS_CONTROLLER	0x0c

 #define SUBCLASS_SERIALBUS_FIREWIRE	0
		
    #define IF_FIREWIRE_GENERIC	0
    #define IF_FIREWIRE_OHCI	1

 #define SUBCLASS_SERIALBUS_ACCESS	1
 #define SUBCLASS_SERIALBUS_SSA		2
 #define SUBCLASS_SERIALBUS_USB		3
   #define IF_SERIAL_UHCI		0
   #define IF_SERIAL_OHCI		0x10
   #define IF_SERIAL_EHCI		0x20
   #define IF_SERIAL_XHCI		0x30
   #define IF_SERIAL_UNSPECIFIED	0x80
   #define IF_SERIAL_USB_DEVICE		0xFE

 #define SUBCLASS_FIBRE_CHANNEL		4

 #define SUBCLASS_SMB		5
 #define SUBCLASS_INFINIBAND		6
 #define SUBCLASS_IPM_INTERFACE		7
 #define SUBCLASS_SERCOS_INTERFACE	8
 #define SUBCLASS_CANBUS		9

#define CLASS_WIRELESS_CONTROL		0xD
 #define SUBCLASS_IRDA_CONTROLLER	0
 #define SUBCLASS_CONSUMER_IRDA_CONTROLLER	1
 #define SUBCLASS_RF_CONTROLLER		0x10
 #define SUBCLASS_BLUETOOTH_CONTROLLER	0x11
 #define SUBCLASS_BROADBAND_CONTROLLER	0x12
 #define SUBCLASS_ETHERNET_CONTROLLER_8021A	0x20
 #define SUBCLASS_ETHERNET_CONTROLLER_8021B	0x21
 #define SUBCLASS_WIRELESS_OTHER	0x80

#define CLASS_INTELLIGENT_CONTROLLER	0xe
 #define SUBCLASS_I2O			0

#define CLASS_SATELLITE_COMMUNICATION_CONTROLLER	0xf
 #define SUBCLASS_SATELLITE_TV_CONTROLLER	1
 #define SUBCLASS_SATELLITE_AUDIO_CONTROLLER	2
 #define SUBCLASS_SATELLITE_VOICE_CONTROLLER	3
 #define SUBCLASS_SATELLITE_DATA_CONTROLLER	4

#define CLASS_ENCRYPTION_CONTROLLER	0x10
 #define SUBCLASS_NETWORK_ENCRYPTION	0
 #define SUBCLASS_ENTERTAINMENT_ENCRYPTION	0x10
 #define SUBCLASS_OTHER_ENCRYPTION	0x80

#define CLASS_SIGNAL_PROCESSING		0x11
 #define SUBCLASS_DPIO_MODULE	0
 #define SUBCLASS_PERFORMANCE_COUNTERS	1
 #define SUBCLASS_COMMUNICATION_SYNCHRONIZER	0x10
#define SUBCLASS_SIGNAL_PROCESSING	0x20
 #define SUBCLASS_SIGNAL_OTHER	0x80

#define CLASS_PROCESSOR_ACELERATOR	0x12
#define CLASS_NON_ESSENTIAL_INSTRUMENTATION	0x13

#define PCI_STATUSMASK_INTERRUPT	4 
#define PCI_STATUSMASK_CAPLIST	8
#define PCI_STATUSMASK_66MZCOMPAT	16
#define PCI_STATUSMASK_BACKBACKCOMPAT	128
#define PCI_STATUSMASK_MASTER_DATA_PARITY_ERROR	256
#define PCI_STATUSMASK_DEVSEL_TIMING 1536
#define PCI_STATUSMASK_SIGTARGET_ABORT 2048
#define PCI_STATUSMASK_RECEIVED_TARGET_ABORT 4096
#define PCI_STATUSMASK_RECEIVED_MASTER_ABORT 8196
#define PCI_STATUSMASK_SIGSYS_ERROR 16392
#define PCI_STATUSMASK_PARITY_ERROR 32767

#define PCI_COMMAND_IO		1
#define PCI_COMMAND_MEMORYSPACE	2
#define PCI_COMMAND_BUSMASTER	4
#define PCI_COMMAND_SPECIALCYCLES 8
#define PCI_COMMAND_MEMWRITE_INVALIDATE 16
#define PCI_COMMAND_VGA_PALETTE_SNOOP	32
#define PCI_COMMAND_PARITY_ERROR_RESPONSE 64
#define PCI_COMMAND_SERR_ENABLE	256
#define PCI_COMMAND_FAST_BACKBACK_ENABLE	512

#define PCI_CLASS    2
#define PCI_TYPE 3

#define PCI_COMMAND 0xCF8
#define PCI_DATA 0xCFC

#define HIGH_WORD_BITMASK 0xFFFF0000
#define LOW_WORD_BITMASK 0xFFFF
#define BYTE4_BITMASK 0xFF000000
#define BYTE3_BITMASK 0xFF0000
#define BYTE4_BITMASK 0xFF00
#define BYTE1_BITMASK 0xFF

typedef struct {
 uint16_t device_id;
 uint16_t vendor_id;
 uint16_t status;
 uint16_t command;
 uint8_t classcode;
 uint8_t subclass;
 uint8_t progif;
 uint8_t revision_id;
 uint8_t bist;
 uint8_t headertype;
 uint8_t latency_timer;
 uint8_t cache_line_size;
 uint32_t bar0;
 uint32_t bar1;
 uint32_t bar2;
 uint32_t bar3;
 uint32_t bar4;
 uint32_t bar5;
 uint32_t cardbus_cis_pointer;
 uint16_t subsystem_id;
 uint16_t subsystem_vendor_id;
 uint32_t expansion_rom_base_address;
 uint32_t capabilities_pointer;
 uint32_t reserved;
 uint8_t max_latency;
 uint8_t min_grant;
 uint8_t interrupt_pin;
 uint8_t interrupt_line;
} pci_headertype00;

typedef struct {
 uint16_t device_id;
 uint16_t vendor_id;
 uint16_t status;
 uint16_t command;
 uint8_t classcode;
 uint8_t subclass;
 uint8_t progif;
 uint8_t reserved_id;
uint8_t bist;
 uint8_t headertype;
 uint8_t latency_timer;
 uint8_t cache_line_size;
 uint32_t bar0;
 uint32_t bar1;
 uint8_t secondary_latency_timer;
 uint8_t subordinate_bus_number;
 uint8_t secondary_bus_number;
 uint8_t primary_bus_number;
 uint16_t secondary_status;
 uint8_t io_limit;
 uint8_t io_base;
 uint16_t memory_limit;
 uint16_t memory_base;
 uint32_t prefetchable_base_upper;
 uint32_t prefetchable_limit_upper;
 uint16_t io_limit_lower;
 uint16_t io_limit_upper;
 uint16_t reserved;
 uint8_t reserved2;
 uint16_t capability_pointer;
 uint32_t expansion_rom_base_address;
 uint16_t bridge_control;
 uint8_t interrupt_pin;
 uint8_t interrupt_line;
} pci_headertype01;

typedef struct {
 uint16_t device_id;
 uint16_t vendor_id;
 uint16_t status;
 uint16_t command;
 uint8_t classcode;
 uint8_t subclass;
 uint8_t progif;
 uint8_t revision_id;
 uint8_t bist;
 uint8_t headertype;
 uint8_t latency_timer;
 uint8_t cache_line_size;
 uint32_t cardbus_socket_base_address;
 uint16_t secondary_status;
 uint8_t reserved;
 uint8_t offset_capabilities_list;
 uint8_t cardbus_latency_timer;
 uint8_t subordinate_bus_number;
 uint8_t cardbus_bus_number;
 uint8_t pci_busnumber;
 uint32_t memory_base_address0;
 uint32_t memory_limit0;
 uint32_t memory_base_address1;
 uint32_t memory_limit1;
 uint32_t iobase_base_address0;
 uint32_t io_limit0;
 uint32_t memory_base_address1_pci_header_02;
 uint32_t memory_limit1_address1_pci_header_02;
 uint16_t bridgecontrol;
 uint8_t interrupt_pin;
 uint8_t interrupt_line;
 uint16_t subsystem_vendor_id;
 uint16_t subsystem_device_id;
 uint32_t pc_card_legacy_mode_base_address;
} pci_headertype02;



